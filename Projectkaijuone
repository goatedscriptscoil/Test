local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Project: remake script by perfect cell",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Welcome to Greenz hub (totally not copying redz)",
   LoadingSubtitle = "By perfect cell",
   Theme = "Amethyst", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Greenz Hub"
   },

   Discord = {
      Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "8JxZb3GtTN", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

Rayfield:Notify({
   Title = "Notification",
   Content = "Destroy everything and everyone",
   Duration = 2.5,
   Image = 4483362458,
})

local Tab = Window:CreateTab("Kaiju picker", 18160452628) -- Title, Image
local Divider = Tab:CreateDivider()

local Button = Tab:CreateButton({
   Name = "Gorosaurus",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Gorosaurus"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "SelectedSkin",
    [2] = ""
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))


   end,
})

local Button = Tab:CreateButton({
   Name = "Titanus Mecha Godzilla",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Mechagodzilla_2021"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "SelectedSkin",
    [2] = ""
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))


   end,
})

local Button = Tab:CreateButton({
   Name = "Godzilla 2019",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Godzilla_2019"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = ""
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))


   end,
})

local Button = Tab:CreateButton({
   Name = "Godzilla 2014",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Godzilla_2014"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = ""
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))


   end,
})

local Button = Tab:CreateButton({
   Name = "Godzilla 2000",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Godzilla_2000"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = ""
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))


   end,
})

local Button = Tab:CreateButton({
   Name = "Orga",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Orga"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = ""
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))


   end,
})

local Button = Tab:CreateButton({
   Name = "Labyrinth",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Labyrinth"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = ""
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))


   end,
})

local Button = Tab:CreateButton({
   Name = "Showa gigan",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "ShowaGigan"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = ""
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))


   end,
})

local Button = Tab:CreateButton({
   Name = "Krystalak",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Krystalak"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = ""
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))


   end,
})

local Button = Tab:CreateButton({
   Name = "Methuselah",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Methuselah"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = ""
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))


   end,
})

local Button = Tab:CreateButton({
   Name = "Titanosaurus",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Titanosaurus"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = ""
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))


   end,
})

local Tab = Window:CreateTab("special Kaiju", 138394446616707) -- Title, Image
local Divider = Tab:CreateDivider()

local Button = Tab:CreateButton({
   Name = "Armageddon",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Armageddon"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = ""
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))


   end,
})

local Button = Tab:CreateButton({
   Name = "silence",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Silence"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = ""
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))


   end,
})

local Button = Tab:CreateButton({
   Name = "Void (Admin kaiju, maybe bannable)",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Void"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = ""
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))


   end,
})

local Tab = Window:CreateTab("Op stuff", 16559945706) -- Title, Image
local Divider = Tab:CreateDivider()

local Button = Tab:CreateButton({
   Name = "Give awakening",
   Callback = function()
   local args = {
    [1] = "RageValue",
    [2] = 750
}

game:GetService("Players").LocalPlayer.Character.Animate.Rage_Handle:FireServer(unpack(args))


   end,
})

local Divider = Tab:CreateDivider()

local Button = Tab:CreateButton({
   Name = "G14 Bash move",
   Callback = function()
   -- SERVICES
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- CONSTANTS
local LocalPlayer = Players.LocalPlayer
local DamageEvent = ReplicatedStorage:WaitForChild("Events"):WaitForChild("All_Kaiju"):WaitForChild("DamageEvent")
local Camera = workspace.CurrentCamera
local SPEED = 75
local DAMAGE_RADIUS = 85
local DAMAGE_REPEAT_TIME = 0.3
local DAMAGE_TOTAL_DURATION = 2.5
local AnimationId = "rbxassetid://101695021065716"

-- VARIABLES
local moving = false
local currentTween
local animationTrack

-- FUNCTION TO PLAY ANIMATION
local function playAnimationOnSpawn(character)
    local humanoid = character:WaitForChild("Humanoid", 5)
    if humanoid then
        local animation = Instance.new("Animation")
        animation.AnimationId = AnimationId
        animationTrack = humanoid:LoadAnimation(animation)
        animationTrack:Play()

        -- When animation ends, stop movement
        animationTrack.Stopped:Connect(function()
            moving = false
            if currentTween then
                currentTween:Cancel()
            end
        end)
    end
end

-- FUNCTION TO MOVE PLAYER
local function moveCharacter()
    if not moving then return end

    local character = LocalPlayer.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return end

    local root = character.HumanoidRootPart
    local direction = Camera.CFrame.LookVector
    direction = Vector3.new(direction.X, 0, direction.Z).Unit -- Flatten so you don't fly

    -- Destination based on speed and time
    local distance = SPEED * 0.1 -- Move 0.1 second ahead each tween
    local goalPosition = root.Position + (direction * distance)

    if currentTween then
        currentTween:Cancel()
    end

    local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Linear)
    local tween = TweenService:Create(root, tweenInfo, {CFrame = CFrame.new(goalPosition, goalPosition + direction)})
    tween:Play()
    currentTween = tween
end

-- FUNCTION TO FIND NEAREST PLAYER
local function getNearestPlayer()
    local character = LocalPlayer.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return nil end
    local root = character.HumanoidRootPart
    local nearestPlayer
    local nearestDistance = DAMAGE_RADIUS

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local dist = (player.Character.HumanoidRootPart.Position - root.Position).Magnitude
            if dist <= nearestDistance then
                nearestPlayer = player
                nearestDistance = dist
            end
        end
    end

    return nearestPlayer
end

-- FUNCTION TO DAMAGE NEAREST PLAYER
local function startDamaging()
    local startTime = tick()

    while tick() - startTime < DAMAGE_TOTAL_DURATION do
        local targetPlayer = getNearestPlayer()
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") then
            -- Fire damage event
            local args = {
                [1] = targetPlayer.Character.Humanoid,
                [2] = false,
                [3] = 12,
                [4] = 10,
                [5] = targetPlayer.Character.HumanoidRootPart.Position,
                [6] = 0.35,
                [7] = 0.8,
                [8] = "Stunned"
            }
            DamageEvent:FireServer(unpack(args))
        end

        task.wait(DAMAGE_REPEAT_TIME)
    end
end

-- MAIN
LocalPlayer.CharacterAdded:Connect(function(character)
    playAnimationOnSpawn(character)

    character:WaitForChild("HumanoidRootPart")

    moving = true

    -- Start moving in LookVector repeatedly
    RunService.Heartbeat:Connect(function()
        if moving then
            moveCharacter()
        end
    end)

    -- Start damaging while moving
    task.spawn(startDamaging)
end)

-- Play immediately if character already loaded
if LocalPlayer.Character then
    playAnimationOnSpawn(LocalPlayer.Character)

    if LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        moving = true

        RunService.Heartbeat:Connect(function()
            if moving then
                moveCharacter()
            end
        end)

        task.spawn(startDamaging)
    end
end

   end,
})

local Divider = Tab:CreateDivider()

local Button = Tab:CreateButton({
   Name = "G14 Kiss of death",
   Callback = function()
   local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

local function getNearestPlayer()
    local nearest, distance = nil, 95
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local magnitude = (HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
            if magnitude < distance then
                distance = magnitude
                nearest = player
            end
        end
    end
    return nearest
end

-- Play grab sound
local args = {
    [1] = "Player",
    [2] = "Grab"
}
Character.Animate.Sounds:FireServer(unpack(args))

-- Play effect
local args = {
    [1] = "Dorsals",
    [2] = "Special3"
}
Character.Animate.Effects:FireServer(unpack(args))

-- Play animation (first one)
local animationId1 = "rbxassetid://86084374561404"
local humanoid = Character:FindFirstChildOfClass("Humanoid")
if humanoid then
    local animation = Instance.new("Animation")
    animation.AnimationId = animationId1
    local track = humanoid:LoadAnimation(animation)
    track:Play()
end

task.wait(0.5)

-- Play sound Special3
local args = {
    [1] = "Player",
    [2] = "Special3"
}
Character.Animate.Sounds:FireServer(unpack(args))

-- Play second animation
local animationId2 = "rbxassetid://124262637069322"
if humanoid then
    local animation = Instance.new("Animation")
    animation.AnimationId = animationId2
    local track = humanoid:LoadAnimation(animation)
    track:Play()
end

task.wait(1.7)

-- Find initial target
local targetPlayer = getNearestPlayer()
if not targetPlayer then
    warn("No target found within 95 studs!")
    return
end

-- GRAB EVENT
local args = {
    [1] = "Grab",
    [2] = targetPlayer.Character,
    [3] = 1.85,
    [4] = true
}
Character.Animate.Grab:FireServer(unpack(args))

-- IMMEDIATELY after grabbing, play Blue Beam effect
local args = {
    [1] = "Beam",
    [2] = "Blue"
}
Character.Animate.Effects:FireServer(unpack(args))

-- First hit damage
local args = {
    [1] = targetPlayer.Character:FindFirstChildOfClass("Humanoid"),
    [2] = true,
    [3] = 25,
    [4] = 0,
    [5] = Vector3.new(0, 0, 0),
    [6] = 0,
    [7] = 2.2,
    [8] = "Grab"
}
ReplicatedStorage.Events.All_Kaiju.DamageEvent:FireServer(unpack(args))

-- Damage over time (updates target every 0.2s)
local startTime = tick()
while tick() - startTime < 2 do
    local newTarget = getNearestPlayer()
    if newTarget then
        local args = {
            [1] = newTarget.Character:FindFirstChildOfClass("Humanoid"),
            [2] = false,
            [3] = 12,
            [4] = 10,
            [5] = Vector3.new(-27.61420440673828, 0.000001160312876891112, 21.504783630371094),
            [6] = 0.35,
            [7] = 5,
            [8] = "Stunned"
        }
        ReplicatedStorage.Events.All_Kaiju.DamageEvent:FireServer(unpack(args))
    end
    task.wait(0.2)
end

-- After damage, play GrabHit sound
local args = {
    [1] = "Player",
    [2] = "GrabHit"
}
Character.Animate.Sounds:FireServer(unpack(args))

   end,
})

local Divider = Tab:CreateDivider()

local Button = Tab:CreateButton({
   Name = "Locked in mg21 (click 2x)",
   Callback = function()
   -- StarterCharacterScripts LocalScript
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

-- Settings
local OutlineColorStart = Color3.fromRGB(255, 0, 0) -- Start Red
local OutlineColorEnd = Color3.fromRGB(0, 0, 255) -- End Blue
local UpdateRate = 0.1 -- Update info every 0.1s

-- Create BillboardGui
local function createBillboard(player)
	local character = player.Character
	if not character then return end
	
	local hrp = character:FindFirstChild("HumanoidRootPart")
	local humanoid = character:FindFirstChildOfClass("Humanoid")
	if not hrp or not humanoid then return end

	-- Prevent duplicates
	if hrp:FindFirstChild("InfoBillboard") then
		hrp.InfoBillboard:Destroy()
	end

	local billboard = Instance.new("BillboardGui")
	billboard.Name = "InfoBillboard"
	billboard.Adornee = hrp
	billboard.Size = UDim2.new(6,0,3,0)
	billboard.StudsOffset = Vector3.new(7, 1, 0) -- 7 studs to right
	billboard.AlwaysOnTop = true
	billboard.Parent = hrp

	local background = Instance.new("Frame")
	background.Size = UDim2.new(1,0,1,0)
	background.BackgroundTransparency = 0.3
	background.BackgroundColor3 = OutlineColorStart
	background.BorderSizePixel = 0
	background.Parent = billboard

	local layout = Instance.new("UIListLayout")
	layout.FillDirection = Enum.FillDirection.Vertical
	layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	layout.VerticalAlignment = Enum.VerticalAlignment.Center
	layout.Padding = UDim.new(0,2)
	layout.Parent = background

	local healthLabel = Instance.new("TextLabel")
	healthLabel.Name = "HealthLabel"
	healthLabel.Size = UDim2.new(1,0,0.3,0)
	healthLabel.BackgroundTransparency = 1
	healthLabel.TextColor3 = Color3.new(1,1,1)
	healthLabel.Font = Enum.Font.GothamBold
	healthLabel.TextScaled = true
	healthLabel.Text = ""
	healthLabel.Parent = background

	local infoLabel = Instance.new("TextLabel")
	infoLabel.Name = "InfoLabel"
	infoLabel.Size = UDim2.new(1,0,0.3,0)
	infoLabel.BackgroundTransparency = 1
	infoLabel.TextColor3 = Color3.new(1,1,1)
	infoLabel.Font = Enum.Font.GothamBold
	infoLabel.TextScaled = true
	infoLabel.Text = ""
	infoLabel.Parent = background

	local distanceLabel = Instance.new("TextLabel")
	distanceLabel.Name = "DistanceLabel"
	distanceLabel.Size = UDim2.new(1,0,0.3,0)
	distanceLabel.BackgroundTransparency = 1
	distanceLabel.TextColor3 = Color3.new(1,1,1)
	distanceLabel.Font = Enum.Font.GothamBold
	distanceLabel.TextScaled = true
	distanceLabel.Text = ""
	distanceLabel.Parent = background

	-- Tween the background color back and forth (Blue <-> Red)
	local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true) -- 2 seconds, repeat forever, reverse
	local tween = TweenService:Create(background, tweenInfo, {BackgroundColor3 = OutlineColorEnd})
	tween:Play()

	return billboard, humanoid
end

-- Create Outline using Highlight
local function outlineCharacter(character)
	if character:FindFirstChild("CharacterHighlight") then
		character.CharacterHighlight:Destroy()
	end
	
	local highlight = Instance.new("Highlight")
	highlight.Name = "CharacterHighlight"
	highlight.FillTransparency = 1 -- Only outline visible
	highlight.OutlineTransparency = 0 -- Full outline
	highlight.OutlineColor = Color3.fromRGB(255, 0, 0) -- Bright Red
	highlight.Adornee = character
	highlight.Parent = character
end

-- Update the Billboard Info
local function updateInfo(player, billboard, humanoid)
	if not player.Character then return end
	if not billboard then return end
	if not humanoid then return end
	
	local healthLabel = billboard:FindFirstChild("Frame") and billboard.Frame:FindFirstChild("HealthLabel")
	local infoLabel = billboard:FindFirstChild("Frame") and billboard.Frame:FindFirstChild("InfoLabel")
	local distanceLabel = billboard:FindFirstChild("Frame") and billboard.Frame:FindFirstChild("DistanceLabel")

	if healthLabel then
		healthLabel.Text = "Health - "..math.floor(humanoid.Health)
	end
	if infoLabel then
		infoLabel.Text = "Information - "..player.Name
	end
	if distanceLabel and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
		local hrp = player.Character.HumanoidRootPart
		local myhrp = Character:FindFirstChild("HumanoidRootPart")
		if myhrp then
			local distance = (myhrp.Position - hrp.Position).Magnitude
			distanceLabel.Text = "Distance - "..math.floor(distance).." studs"
		end
	end
end

-- Setup a player
local function setupPlayer(player)
	if player == LocalPlayer then return end -- Skip yourself

	player.CharacterAdded:Connect(function(character)
		character:WaitForChild("HumanoidRootPart")
		character:WaitForChild("Humanoid")
		
		local billboard, humanoid = createBillboard(player)
		outlineCharacter(character)
		
		RunService.Heartbeat:Connect(function()
			if billboard and humanoid and humanoid.Health > 0 then
				updateInfo(player, billboard, humanoid)
			end
		end)
	end)

	-- In case character already exists
	if player.Character then
		local billboard, humanoid = createBillboard(player)
		outlineCharacter(player.Character)
		
		RunService.Heartbeat:Connect(function()
			if billboard and humanoid and humanoid.Health > 0 then
				updateInfo(player, billboard, humanoid)
			end
		end)
	end
end

-- Initial Players
for _, player in ipairs(Players:GetPlayers()) do
	setupPlayer(player)
end

-- New Players
Players.PlayerAdded:Connect(function(player)
	setupPlayer(player)
end)

   end,
})

local Divider = Tab:CreateDivider()

local Button = Tab:CreateButton({
   Name = "Void custom ult",
   Callback = function()
   -- Animation setup
local animationId = "rbxassetid://82577779238482"

local function playAnimation(character)
	local humanoid = character:FindFirstChildOfClass("Humanoid")
	if humanoid then
		local anim = Instance.new("Animation")
		anim.AnimationId = animationId
		local track = humanoid:LoadAnimation(anim)
		track:Play()
	end
end

-- Connect to character spawn
game.Players.LocalPlayer.CharacterAdded:Connect(playAnimation)
if game.Players.LocalPlayer.Character then
	playAnimation(game.Players.LocalPlayer.Character)
end

wait(2)

-- Fire Roar events 5 times
for _ = 1, 4 do
	game:GetService("Players").LocalPlayer.Character.Animate.Sounds:FireServer("Player", "Roar")
	game:GetService("Players").LocalPlayer.Character.Animate.Effects:FireServer("Roar")
end

-- Fire BeamCharge effect once
game:GetService("Players").LocalPlayer.Character.Animate.Effects:FireServer("BeamCharge")
wait(0.8)

-- Fire Beam effect 10 times
for _ = 1, 10 do
	game:GetService("Players").LocalPlayer.Character.Animate.Effects:FireServer("Beam")
	wait(0.05)
end

-- Damage nearest players every 0.2 seconds for 4 seconds
local char = game.Players.LocalPlayer.Character
local root = char and char:FindFirstChild("HumanoidRootPart")
local rs = game:GetService("ReplicatedStorage")
local damageEvent = rs:WaitForChild("Events"):WaitForChild("All_Kaiju"):WaitForChild("DamageEvent")

if root then
	local duration = 4
	local interval = 0.2
	local radius = 165
	local startTime = tick()

	while tick() - startTime < duration do
		for _, player in pairs(game.Players:GetPlayers()) do
			if player ~= game.Players.LocalPlayer and player.Character then
				local hrp = player.Character:FindFirstChild("HumanoidRootPart")
				local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
				if hrp and humanoid and (hrp.Position - root.Position).Magnitude <= radius then
					local args = {
						[1] = humanoid,
						[2] = false,
						[3] = 35,
						[4] = 25,
						[5] = hrp.Position,
						[6] = -1,
						[7] = 6.5,
						[8] = "Stunned"
					}
					damageEvent:FireServer(unpack(args))
				end
			end
		end
		wait(interval)
	end
end

   end,
})

local Divider = Tab:CreateDivider()

local Button = Tab:CreateButton({
   Name = "MechaGodzilla missile spam, with auto detect player",
   Callback = function()
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Animate = Character:WaitForChild("Animate")

-- Find nearest player
local function getNearestPlayer()
	local closestPlayer = nil
	local shortestDistance = math.huge
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			local distance = (Character:WaitForChild("HumanoidRootPart").Position - player.Character.HumanoidRootPart.Position).Magnitude
			if distance < shortestDistance then
				shortestDistance = distance
				closestPlayer = player
			end
		end
	end
	return closestPlayer
end

local target = getNearestPlayer()
if target then
	local args = {
		[1] = "EnemyValue",
		[2] = target.Name
	}
	Animate.Missiles:FireServer(unpack(args))
	wait(0.5)
	
	local fireArgs = {
		[1] = "Missiles"
	}
	
	for i = 1, 18 do
		Animate.Missiles:FireServer(unpack(fireArgs))
		wait(0.09)
	end
end


   end,
})

local Divider = Tab:CreateDivider()

local Button = Tab:CreateButton({
   Name = "Guaranteed Mecha Godzilla tail sting ",
   Callback = function()
-- Define the animation ID
local animationId = "rbxassetid://97197544566741"

-- Function to play animation
local function playAnimationOnSpawn(character)
    -- Check if the character and humanoid exist
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        -- Load animation
        local animation = Instance.new("Animation")
        animation.AnimationId = animationId
        
        -- Play animation
        local animationTrack = humanoid:LoadAnimation(animation)
        animationTrack:Play()
    end
end

-- Listen for the player's character to spawn
game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
    playAnimationOnSpawn(character)
end)

-- Play animation immediately if the character is already spawned
if game.Players.LocalPlayer.Character then
    playAnimationOnSpawn(game.Players.LocalPlayer.Character)
end

-- Function to find the nearest player within a 135-stud radius
local function findNearestPlayer()
    local closestPlayer = nil
    local closestDistance = 125  -- 135 stud radius
    local currentPlayer = game.Players.LocalPlayer
    for _, player in pairs(game.Players:GetPlayers()) do
        if player.Character and player ~= currentPlayer then
            local distance = (player.Character.HumanoidRootPart.Position - currentPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance <= closestDistance then
                closestPlayer = player
                closestDistance = distance
            end
        end
    end
    return closestPlayer
end

-- Wait for a short period before executing the damage event
wait(0.8)

-- Find the nearest player
local targetPlayer = findNearestPlayer()

-- If a target is found, send the damage event repeatedly for 2.5 seconds
if targetPlayer then
    local args = {
        [1] = targetPlayer.Character.Humanoid,  -- Target the humanoid of the nearest player
        [2] = false,  -- Assuming this value is unchanged
        [3] = 5,      -- Damage value (unchanged from your script)
        [4] = 2,      -- Another parameter (unchanged from your script)
        [5] = Vector3.new(0, 0, 0),  -- The position (unchanged from your script)
        [6] = 0,      -- Another parameter (unchanged from your script)
        [7] = 4.5,    -- Another parameter (unchanged from your script)
        [8] = "Stunned",  -- Status effect
        [9] = "G19"    -- Identifier for the move
    }

    -- Repeat the damage event every 0.08 seconds for 2.5 seconds
    local elapsedTime = 0
    while elapsedTime < 2 do
        game:GetService("ReplicatedStorage").Events.All_Kaiju.DamageEventMove:FireServer(unpack(args))
        wait(0.08)
        elapsedTime = elapsedTime + 0.08
    end
end

   end,
})

local Divider = Tab:CreateDivider()

local Button = Tab:CreateButton({
   Name = "G2019 Buffed Nuke (USE AT RISK, TOO OP)",
   Callback = function()
   local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Animation ID
local animationId = "rbxassetid://132010227982878"

-- Function to play animation
local function playAnimation()
	local humanoid = character:FindFirstChildOfClass("Humanoid")
	if humanoid then
		local animation = Instance.new("Animation")
		animation.AnimationId = animationId
		local track = humanoid:LoadAnimation(animation)
		track:Play()
	end
end

-- Trigger ultimate sequence
local function triggerUltimate()
	playAnimation()

	local animate = character:WaitForChild("Animate")

	-- Play effects and sounds
	animate.Effects:FireServer("Ultimate", true)
	animate.Sounds:FireServer("Player", "Ultimate")
	animate.Effects:FireServer("SmokeTrigger")
	animate.Effects:FireServer("Pulse", "Start")

	task.wait(4)
	animate.UltimateHandler:FireServer("RageBegin")
	animate.Effects:FireServer("Pulse", "Second")

	-- Damage all nearby players within 45 studs
	for _, otherPlayer in ipairs(game.Players:GetPlayers()) do
		if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
			local rootPart = otherPlayer.Character.HumanoidRootPart
			local distance = (rootPart.Position - character.HumanoidRootPart.Position).Magnitude
			if distance <= 245 then
				game.ReplicatedStorage.Events.All_Kaiju.DamageEvent:FireServer(
					otherPlayer.Character:FindFirstChild("Humanoid"),
					false,
					850,
					95,
					rootPart.Position,
					0.5,
					0.8,
					"Stunned"
				)
			end
		end
	end

	animate.Effects:FireServer("Pulse", "Main")
	animate.Effects:FireServer("Pulse", "Last")

	task.wait(1)
	animate.Effects:FireServer("Ultimate", false)

	task.wait(10)
	animate.UltimateHandler:FireServer("RageEnd")
end

-- Execute
triggerUltimate()

   end,
})

local Tab = Window:CreateTab("Skinned kaiju's", 44833624588) -- Title, Image
local Divider = Tab:CreateDivider()

local Button = Tab:CreateButton({
   Name = "Mecha",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Godzilla_2019"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))


local args = {
    [1] = "SelectedSkin",
    [2] = "Godzilla_2019-Mecha"
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))


   end,
})

local Button = Tab:CreateButton({
   Name = "Toy2000",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Godzilla_2000"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))


local args = {
    [1] = "SelectedSkin",
    [2] = "Godzilla_2000-Toy"
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))



   end,
})

local Button = Tab:CreateButton({
   Name = "Snow mountain",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Methuselah"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = "Methuselah-Snowy"
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))



   end,
})

local Button = Tab:CreateButton({
   Name = "Volcano",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Methuselah"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = "Methuselah-Volcanic"
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))



   end,
})

local Button = Tab:CreateButton({
   Name = "Melt-orga",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Orga"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = "Orga-Meltdown"
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))



   end,
})

local Button = Tab:CreateButton({
   Name = "Uranium",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Orga"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = "Orga-Uranium"
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))



   end,
})

local Button = Tab:CreateButton({
   Name = "The Son of silence",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Silence"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = "Silence-Offspring"
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))



   end,
})

local Button = Tab:CreateButton({
   Name = "Deep-titanosaurus",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Titanosaurus"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))


local args = {
    [1] = "SelectedSkin",
    [2] = "Titanosaurus"
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))



   end,
})

local Button = Tab:CreateButton({
   Name = "inferno-titanosaurus",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Titanosaurus"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = "Titanosaurus-Inferno"
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))




   end,
})

local Button = Tab:CreateButton({
   Name = "Phase one",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Void"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = "Void-PhaseOneReference"
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))




   end,
})

local Button = Tab:CreateButton({
   Name = "Nightmare",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Silence"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = "Silence-Nightmare"
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))




   end,
})

local Button = Tab:CreateButton({
   Name = "Bloo",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "ShowaGigan"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = "ShowaGigan-bloo"
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))




   end,
})

local Button = Tab:CreateButton({
   Name = "idkman",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Labyrinth"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = "Labyrinth-IdkMan"
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))




   end,
})

local Button = Tab:CreateButton({
   Name = "Speed",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Krystalak"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = "Krystalak-Speed"
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))




   end,
})

local Button = Tab:CreateButton({
   Name = "Hanna",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Godzilla_2014"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = "Godzilla_2014-Hanna"
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))




   end,
})

local Button = Tab:CreateButton({
   Name = "Toe nail Armageddon",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Armageddon"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = "Armageddon-Monotone"
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))




   end,
})

local Button = Tab:CreateButton({
   Name = "Black ops",
   Callback = function()
   local args = {
    [1] = "SelectedKaiju",
    [2] = "Mechagodzilla_2021"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("data_Change"):FireServer(unpack(args))

local args = {
    [1] = "SelectedSkin",
    [2] = "Mechagodzilla_2021-BlackOps"
}

game:GetService("ReplicatedStorage").Events.data_Change:FireServer(unpack(args))




   end,
})
